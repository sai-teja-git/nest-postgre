// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  name      String
  email     String    @unique
  password  String
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Vendor {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  contactName String
  address     String
  mobile      String
  postalCode  String
  email       String
  website     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Product Product[]
}

model ProductCategory {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Product Product[]
}

model Brand {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Product Product[]
}

model Product {
  id          Int             @id @default(autoincrement())
  name        String
  description String
  price       Int
  brand       Brand           @relation(fields: [brandId], references: [id])
  brandId     Int
  catgeory    ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId  Int
  vendor      Vendor          @relation(fields: [vendorId], references: [id])
  vendorId    Int
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@unique([name, brandId, vendorId])
}
